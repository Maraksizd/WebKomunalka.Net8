@model WebKomunalka.Net8.Models.Payment

@{
    var userServices = ViewBag.UserServices as List<Service>;
}

<h1 class="mb-4">Додати платіж</h1>

<form asp-action="AddPaymentPost" method="post" class="needs-validation" novalidate>
    <div class="form-group mb-3">
        <label for="Date">Дата</label>
        <input type="text" id="datepicker"> <!-- Add this line for add datapicker -->
        <div class="invalid-feedback">
            Будь ласка, виберіть дату.
        </div>
    </div>

    <div class="form-group mb-3">
        <label for="AmountUsage">Використана кількість</label>
        <input type="number" step="0.01" class="form-control" id="AmountUsage" name="AmountUsage" required>
        <div class="invalid-feedback">
            Будь ласка, введіть кількість використаного ресурсу.
        </div>
    </div>

    <div class="form-group mb-3">
        <label for="TotalPrice">Загальна ціна</label>
        <input type="number" step="0.01" class="form-control" id="TotalPrice" name="TotalPrice" required>
        <div class="invalid-feedback">
            Будь ласка, введіть загальну ціну.
        </div>
    </div>

    <div class="form-group mb-4">
        <label for="service">Виберіть сервіс</label>
        <select id="service" name="ServiceId" class="form-control" required>
            <option value="">Виберіть сервіс</option>
            @foreach (var service in userServices)
            {
                <option value="@service.Id">@service.ServiceName</option>
            }
        </select>
        <div class="invalid-feedback">
            Будь ласка, виберіть сервіс.
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Додати платіж</button>
</form>

@section Scripts {
    <script>
        var datepicker = new Datepicker('#datepicker'); <!-- Add this line for add datapicker -->
    document.addEventListener('DOMContentLoaded', (event) => {
        let dateInput = document.getElementById('Date');
        let today = new Date().toISOString().substr(0, 10);
        dateInput.value = today;
    });

    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict'
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();

    </script>
}